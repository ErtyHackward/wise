// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WiseApi;

namespace WiseApi.Migrations
{
    [DbContext(typeof(WiseContext))]
    [Migration("20191222144627_AddTitleAndDescForReportConfig")]
    partial class AddTitleAndDescForReportConfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WiseDomain.DataProviderConfiguration", b =>
                {
                    b.Property<int>("DataProviderConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataProviderType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.HasKey("DataProviderConfigurationId");

                    b.ToTable("DataProviderConfigurations");
                });

            modelBuilder.Entity("WiseDomain.ReportConfiguration", b =>
                {
                    b.Property<int>("ReportConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DataProviderConfigurationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Query")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.HasKey("ReportConfigurationId");

                    b.HasIndex("DataProviderConfigurationId");

                    b.ToTable("ReportConfigurations");
                });

            modelBuilder.Entity("WiseDomain.ReportExecution", b =>
                {
                    b.Property<int>("ReportExecutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExecutionFinishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExecutionStartedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ReportConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("ReportExecutionId");

                    b.HasIndex("ReportConfigurationId");

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("WiseDomain.ReportConfiguration", b =>
                {
                    b.HasOne("WiseDomain.DataProviderConfiguration", "DataProvider")
                        .WithMany()
                        .HasForeignKey("DataProviderConfigurationId");
                });

            modelBuilder.Entity("WiseDomain.ReportExecution", b =>
                {
                    b.HasOne("WiseDomain.ReportConfiguration", "ReportConfiguration")
                        .WithMany()
                        .HasForeignKey("ReportConfigurationId");
                });
#pragma warning restore 612, 618
        }
    }
}
