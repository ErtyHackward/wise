@page "/reports_old"
@inject HttpClient Http
@inject Backend Backend
@inject ILogger<Backend> Logger

<h1>Отчет @_serverResponse?.Response?.ReportTitle</h1>

<p>@_serverResponse?.Response?.Description</p>

@if (_serverResponse == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    if (!_serverResponse.Success)
    {
        <p><em>Не удалось загрузить: @_serverResponse.ErrorText </em></p>
    }
    else
    {
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    @foreach (var columnName in _serverResponse.Response.Columns)
                    {
                        <th>@columnName</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in _serverResponse.Response.PreviewValues)
                {
                    <tr>
                        @foreach (var item in row)
                        {
                            <td class="trim-td">@item</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }

    <button class="btn btn-primary"
            @onclick="@(e => UpdateReport())">
        Обновить
    </button>

}

@code {
    private ServerResponse<ReportResponse> _serverResponse;

    protected override async Task OnInitializedAsync()
    {
        UpdateReport();
    }

    private async void UpdateReport()
    {
        _serverResponse = null;
        _serverResponse = await Backend.GetAsync<ReportResponse>("http://localhost:64460/api/reports/1");
        StateHasChanged();
    }
}
