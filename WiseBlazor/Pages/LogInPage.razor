@layout LoginLayout
@page "/login"
@inject Backend Backend
@inject NavigationManager NavigationManager
@inject IModalService Modal

<style>
    html,
    body {
        height: 100%;
    }

    body {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-align: center;
        align-items: center;
        padding-top: 40px;
        padding-bottom: 40px;
        background-color: #f5f5f5;
    }

    .form-signin {
        width: 100%;
        max-width: 330px;
        padding: 15px;
        margin: auto;
    }

        .form-signin .checkbox {
            font-weight: 400;
        }

        .form-signin .form-control {
            position: relative;
            box-sizing: border-box;
            height: auto;
            padding: 10px;
            font-size: 16px;
        }

            .form-signin .form-control:focus {
                z-index: 2;
            }

        .form-signin input[type="text"] {
            margin-bottom: -1px;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        .form-signin input[type="password"] {
            margin-bottom: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }

    .total-width {
        width: 100vw;
    }
</style>

<div class="text-center total-width">
    <form class="form-signin">
        <img class="mb-4" src="/images/w.svg" alt="" width="72" height="72">
        <h1 class="h3 mb-3 font-weight-normal">Авторизация</h1>
        <label for="inputLogin" class="sr-only">Логин</label>
        <input type="text" id="inputLogin" class="form-control" placeholder="Логин" @bind="LoginStr" required autofocus>
        <label for="inputPassword" class="sr-only">Пароль</label>
        <input type="password" id="inputPassword" class="form-control" placeholder="Пароль" @bind="PasswordStr" required>
        <button class="btn btn-lg btn-primary btn-block" @onclick="Login" disabled="@_disabledLogin" >Войти</button>
        <p class="mt-5 mb-3 text-muted">&copy; @DateTime.Now.Year</p>
    </form>
</div>
@code {

    public string LoginStr { get; set; }
    public string PasswordStr { get; set; }

    private bool _disabledLogin = false;

    private async void Login()
    {
        _disabledLogin = true;

        try
        {
            var result = await Backend.Authorize(LoginStr, PasswordStr);

            if (result)
            {
                if (!string.IsNullOrEmpty(RedirectToLogin.RedirectUri))
                    RedirectToLogin.RedirectUri = "/";
                NavigationManager.NavigateTo(RedirectToLogin.RedirectUri);
            }
        }
        catch (Exception e)
        {
            var parameters = new ModalParameters();
            parameters.Add("ErrorMessage", e.Message);

            Modal.Show<ModalErrorComponent>("Ошибка", parameters);
        }
        finally
        {
            _disabledLogin = false;
            StateHasChanged();
        }

        
    }

}
